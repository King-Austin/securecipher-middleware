# Generated by Django 5.2.2 on 2025-06-17 03:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CryptoAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fingerprint', models.CharField(db_index=True, help_text='Public key fingerprint used', max_length=64)),
                ('operation', models.CharField(choices=[('register', 'Key Registration'), ('verify', 'Signature Verification'), ('encrypt', 'Data Encryption'), ('decrypt', 'Data Decryption'), ('sign', 'Data Signing'), ('login', 'Crypto Login'), ('transfer', 'Crypto Transfer'), ('auth', 'Authentication'), ('status', 'Status Check')], help_text='Type of cryptographic operation', max_length=20)),
                ('endpoint', models.CharField(help_text='API endpoint accessed', max_length=200)),
                ('request_id', models.CharField(db_index=True, help_text='Unique request identifier', max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the operation occurred')),
                ('ip_address', models.GenericIPAddressField(help_text='Client IP address')),
                ('user_agent', models.TextField(blank=True, help_text='Client user agent string')),
                ('success', models.BooleanField(help_text='Whether the operation was successful')),
                ('error_message', models.TextField(blank=True, help_text='Error message if operation failed')),
                ('request_data', models.JSONField(blank=True, default=dict, help_text='Sanitized request data for audit')),
                ('response_code', models.IntegerField(blank=True, help_text='HTTP response code', null=True)),
                ('processing_time_ms', models.IntegerField(blank=True, help_text='Processing time in milliseconds', null=True)),
                ('user', models.ForeignKey(blank=True, help_text='User who performed the operation', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Crypto Audit Log',
                'verbose_name_plural': 'Crypto Audit Logs',
                'db_table': 'crypto_audit_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['fingerprint', 'timestamp'], name='crypto_audi_fingerp_4b1b85_idx'), models.Index(fields=['request_id'], name='crypto_audi_request_abe871_idx'), models.Index(fields=['operation', 'success'], name='crypto_audi_operati_72f656_idx'), models.Index(fields=['timestamp'], name='crypto_audi_timesta_ae0607_idx'), models.Index(fields=['user', 'timestamp'], name='crypto_audi_user_id_b9abd5_idx'), models.Index(fields=['ip_address', 'timestamp'], name='crypto_audi_ip_addr_df7863_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserCryptoKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fingerprint', models.CharField(db_index=True, help_text='SHA-256 hash of the public key for quick identification', max_length=64, unique=True)),
                ('public_key_jwk', models.JSONField(help_text='Public key in JWK format from WebCrypto API')),
                ('algorithm', models.CharField(default='ECDSA', help_text='Cryptographic algorithm used', max_length=20)),
                ('curve', models.CharField(default='P-384', help_text='Elliptic curve used for ECDSA', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this key is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the key was first registered')),
                ('last_used', models.DateTimeField(auto_now=True, help_text='Last time this key was used for verification')),
                ('device_info', models.JSONField(blank=True, default=dict, help_text='Device information for key tracking')),
                ('user', models.ForeignKey(blank=True, help_text='Associated user account (null for anonymous keys)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crypto_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Crypto Key',
                'verbose_name_plural': 'User Crypto Keys',
                'db_table': 'crypto_user_keys',
                'ordering': ['-last_used'],
                'indexes': [models.Index(fields=['fingerprint', 'is_active'], name='crypto_user_fingerp_5d39d1_idx'), models.Index(fields=['user', 'is_active'], name='crypto_user_user_id_61ee05_idx'), models.Index(fields=['created_at'], name='crypto_user_created_7d49f1_idx'), models.Index(fields=['last_used'], name='crypto_user_last_us_909130_idx')],
            },
        ),
    ]
